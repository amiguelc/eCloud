security:
    encoders:
        eCloud\UsuarioBundle\Entity\Usuarios: { algorithm: sha512, iterations:0, encode_as_base64: false }
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        users:
            entity: { class: eCloud\UsuarioBundle\Entity\Usuarios, property: email }
        in_memory:
            memory:
                users:
                    admin: { password: admin1, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin_area:
            pattern:    ^/admin
            provider: in_memory
            form_login:
                login_path: /admin/login
                check_path: /admin/login_check
                #default_target_path: /admin/home
                #always_use_default_target_path: true
            logout:
                path:   /admin/logout
                target: /admin/
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
        usuarios_area:
            pattern:    ^
            provider: users
            form_login:
                login_path: /login
                check_path: /login_check
                default_target_path: /home
                always_use_default_target_path: true
                require_previous_session: false
            logout:
                path:   /logout
                target: /
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"


    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/registro, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }