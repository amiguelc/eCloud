{% extends '::frontend.html.twig' %}
{% block title %}Ficheros {% endblock %}

{% block article %}

<script type="text/javascript">

	function borrarNodo(nodo,idfichero){
		//Calculo de si es el ultimo nodo
		var body=document.getElementById("tbody"); 
		var x=body.childNodes;
		var hijos=0;
		for (i=0;i<x.length;i++){
			if (x[i].tagName=="TR"){hijos+=1;}
		}
		
		//Obtiene nodo
		var child=document.getElementById(nodo);
		if (hijos==1){
		//Si es el ultimo nodo, lo borra pero crea uno vacio, ademas pone 0 archivos.
		child.innerHTML="<tr id='tr1'><th>...</th><th></th><th></th><th></th></tr>";
		document.getElementById("td_total_archivos").innerHTML="<span id='total_archivos'>0</span> archivos";
		}
		else{
		//Borra nodo
		child.parentNode.removeChild(child);
		if(hijos==2){
			//Si quedan 2 nodos, al borrar uno, quedara uno -> 1 archivo
			document.getElementById("td_total_archivos").innerHTML="<span id='total_archivos'>1</span> archivo";
			
		}else if(hijos>2){
			//Si quedan mas de 2 nodos, resta la cantiada de ficheros totales.
			var y=document.getElementById("total_archivos").innerHTML;
			document.getElementById("total_archivos").innerHTML=y-1;
		}
		}
		//peticion POST AJAX para eliminar fichero.
		
		$.get(idfichero);
	}
	
	function fileSelected() {
	  var file = document.getElementById('{{ formulario.file.vars.id }}').files[0];
	  if (file) {
		var fileSize = 0;
		if (file.size > 1024 * 1024){
		  fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
		}
		else{
		  fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
		}
		//Recuperar el espacio ocupado del usuario
		if (location.pathname.match(/^\/app_dev.php\/ficheros/)!=null){
			var dir=location.protocol+"//"+location.hostname+"/app_dev.php/api/perfil/espacio";
		}
		else if(location.pathname.match(/^\/app.php\/ficheros/)!=null){
			var dir=location.protocol+"//"+location.hostname+"/app.php/api/perfil/espacio";
		}
		else{
			var dir=location.protocol+"//"+location.hostname+"/api/perfil/espacio";
		}
		var xhr_ocupado = $.get( dir, function( datos ) {
		document.getElementById('max_file_size').value = datos.libre;
		//Comprobacion de si el fichero seleccionado es mayor al espacio disponible
		if (file.size>datos.libre){
				if (datos.libre > 1024 * 1024){
				  datos.libre = (Math.round(datos.libre * 100 / (1024 * 1024)) / 100).toString() + 'MB';
				}
				else{
				  datos.libre = (Math.round(datos.libre * 100 / 1024) / 100).toString() + 'KB';
				}
			document.getElementById('fileName').innerHTML = 'Name: ' + file.name +"<br>Error: Te quedan solo "+datos.libre+" libres. Y el fichero seleccionado ocupa "+fileSize;
			document.getElementById('{{ formulario.file.vars.id }}').value="";
		}
		else{
		document.getElementById('fileName').innerHTML = 'Name: ' + file.name;
		document.getElementById('fileSize').innerHTML = 'Size: ' + fileSize;
		document.getElementById('fileType').innerHTML = 'Type: ' + file.type;
		}
		}, 'json');
	  }
	}
	
	function uploadFile() {
	
	//Comprobaciones de que no falten datos, form_ruta y max_file_size, en el lado del servidor tambien.
	if(document.getElementById('form_file').value==="" || document.getElementById('form_ruta').value===undefined || document.getElementById('form__token').value===undefined){
		 alert("Error en la subida. Faltan datos");
	}
	else{
		//Comrpobaciones de nombres con caracteres no permitidos.
		var cadena=document.getElementById('form_file').value;
		if (caracteresprohibidos(cadena)==true){
			alert("El nombre del fichero tiene caracteres no permitidos");
			document.getElementById('form_file').value="";
		}
		else{
			if (location.pathname.match(/^\/app_dev.php\/ficheros/)!=null){
				var dir=location.protocol+"//"+location.hostname+"/app_dev.php/subir";
			}
			else if(location.pathname.match(/^\/app.php\/ficheros/)!=null){
				var dir=location.protocol+"//"+location.hostname+"/app.php/subir";
			}
			else{
				var dir=location.protocol+"//"+location.hostname+"/subir";
			}
			
			if(window.XMLHttpRequest) {
			  xhr = new XMLHttpRequest();
			}
			else {
			  xhr = new ActiveXObject("Microsoft.XMLHTTP");
			}
			
		  var fd = new FormData(document.getElementById('form1'));
		  /* event listners */
		  xhr.upload.addEventListener("progress", uploadProgress, false);
		  xhr.addEventListener("load", uploadComplete, false);
		  xhr.addEventListener("error", uploadFailed, false);
		  xhr.addEventListener("abort", uploadCanceled, false);
		  /* Be sure to change the url below to the url of your upload server side script */
		  xhr.open("POST", dir);
		  xhr.send(fd);
		   }
		}
	}
	
	function uploadProgress(evt) {
	  if (evt.lengthComputable) {
		var percentComplete = Math.round(evt.loaded * 100 / evt.total);
		document.getElementById('progressNumber').innerHTML = percentComplete.toString() + '%';
	  }
	  else {
		document.getElementById('progressNumber').innerHTML = 'unable to compute';
	  }
	}

	function uploadComplete(evt) {
	  /* This event is raised when the server send back a response */
	  alert(evt.target.responseText);
	  //Recargar pagina
	  location.reload(true);
	}

	function uploadFailed(evt) {
	  alert("There was an error attempting to upload the file.");
	}

	function uploadCanceled(evt) {
	  alert("The upload has been canceled by the user or the browser dropped the connection.");
	}  
	
	
	function crearCarpeta() {
	//Comprobaciones de que no falten datos, form_ruta y max_file_size, en el lado del servidor tambien.
	if(document.getElementById('form_nombrefichero').value==="" || document.getElementById('form_ruta').value===undefined || document.getElementById('form__token').value===undefined){
		 alert("Error en la subida. Faltan datos");
	 }else{
	
		//Comrpobaciones de nombres con carcateres no permitidos.
		var cadena=document.getElementById('form_nombrefichero').value;
		if (caracteresprohibidos(cadena)==true){
			alert("Caracteres no permitidos");
			document.getElementById('form_nombrefichero').value="";}
		else{
		
			if (location.pathname.match(/^\/app_dev.php\/ficheros/)!=null){
				var dir=location.protocol+"//"+location.hostname+"/app_dev.php/subir";
			}
			else if(location.pathname.match(/^\/app.php\/ficheros/)!=null){
				var dir=location.protocol+"//"+location.hostname+"/app.php/subir";
			}
			else{
				var dir=location.protocol+"//"+location.hostname+"/subir";
			}
			
			if(window.XMLHttpRequest) {
			  xhr = new XMLHttpRequest();
			}
			else {
			  xhr = new ActiveXObject("Microsoft.XMLHTTP");
			}

		  var fd = new FormData(document.getElementById('form2'));
		  /* event listners */
		  //xhr.upload.addEventListener("progress", uploadProgress, false);
		  xhr.addEventListener("load", uploadComplete, false);
		  xhr.addEventListener("error", uploadFailed, false);
		  xhr.addEventListener("abort", uploadCanceled, false);
		  /* Be sure to change the url below to the url of your upload server side script */
		  xhr.open("POST", dir);
		  xhr.send(fd);
	  }
	  }
	}
	
	//Funcion para comprobar caracteres prohibidos. ( / \ : ? < > ' " ~ * | ). Falta mejorar para detectar el caracter prohibido y devolverlo.
	function caracteresprohibidos(cadena){
	var a=false;
		if(cadena.match(/\//)){ a=true;}
		if(cadena.match(/\\/)){ a=true;}
		if(cadena.match(/:/)){ a=true;}
		if(cadena.match(/\?/)){ a=true;}
		if(cadena.match(/</)){ a=true;}
		if(cadena.match(/>/)){ a=true;}
		if(cadena.match(/'/)){ a=true;}
		if(cadena.match(/"/)){ a=true;}
		if(cadena.match(/~/)){ a=true;} //Aqui hay un bug que hace que se ejecute dos veces el alert del warning,
		if(cadena.match(/\*/)){ a=true;}
		if(cadena.match(/\|/)){ a=true;}
		
		return a;
	}
	
	function comprobarCarpeta(elemento) {
	var cadena=elemento.value;
		if (caracteresprohibidos(cadena)==true){
			alert("Esta prohibido crear carpetas con caracteres prohibidos ( / \\ : ? < > \' \" ~ * | ).");
			elemento.value=cadena.slice(0,cadena.length-1);
		}
	
	}
	
	
</script>

<section>
	<h1 id='titulo'>{{ block('title') }}</h1>
	<div class="tabla" id='itsthetable'>
	<table>
	<caption>{{ app.user.nombreusuario }}<a href="{{ path('ficheros') }}">/{{ ruta }}</a> <div style='float:right'><button id='button_subir'>Subir archivo</button> <button id='button_carpeta'>Crear carpeta</button></div></caption>

	<thead><tr><th style='width:80%;'>Nombre</th><th>Tama&ntilde;o</th><th>Modificado</th><th></th></tr></thead>
	<tbody id="tbody">
		{% set var1 = 0 %}
		{% for ficheros in ficheros %}
		
		{% set var1 = var1 + 1 %}

		<tr id="tr{{var1}}" {% if var1 is divisibleby(2) %} class="odd" {% endif %}>
			<th>
				{% if ficheros.tipo == 'carpeta' %}
					{% if ficheros.ruta == '/' %}
						<a href="{{ path('ficheros') }}{{ ['/',ficheros.nombrefichero]|join }}">{{ ficheros.nombrefichero }}/</a> 
					{% else %}
						<a href="{{ path('ficheros') }}{{ [ficheros.ruta,'/',ficheros.nombrefichero]|join }}">{{ ficheros.nombrefichero }}/</a> 
					{% endif %}
					
				{% else %}
					<a href="{{ path('descargar', { 'fichero': ficheros.idfichero }) }}">{{ ficheros.nombrefichero }}</a> 
				{% endif %}
			</th>
			<th style='text-align:right;'> {{ficheros.filesize}} Mb</th>
			<th>{{ ficheros.fechasubida|date('d-m-Y') }}</th>
			<th> 
				<a href="{{ path('modificar', { 'fichero': ficheros.idfichero }) }}"><img  alt="Editar" src="{{ asset('bundles/usuario/images/edit.png') }}"></a>
				<!-- <a href="{{ path('borrar', { 'fichero': ficheros.idfichero }) }}">  <img alt="Eliminar" src="{{ asset('bundles/usuario/images/delete.png') }}"></a> -->
				<a href="#" onclick="borrarNodo('tr{{var1}}','{{ path('borrar', { 'fichero': ficheros.idfichero }) }}')">  <img alt="Eliminar" src="{{ asset('bundles/usuario/images/delete.png') }}"></a> 
			</th>
		</tr>
		{% endfor %}
		{% if var1 == 0 %}<tr><th><a href="{{ app.request.getRequestURI() }}/../"/>../</a></th><th></th><th></th><th></th></tr>{% endif %}
	</tbody>
	<tfoot><tr><th>Total</th><td colspan="4" id="td_total_archivos"><span id='total_archivos'>{{var1}}</span> archivos</td></tr></tfoot>
	</table>
	</div>	

	<div id='file_upload' class='div_amagado'>
		<table class='no_class'>
			<tr>
					<form id="form1" action="{{ path('subir') }}" method="POST" {{ form_enctype(formulario) }}>
						{{ form_errors(formulario) }}
						<td><div>{{ form_label(formulario.file) }}{{ form_errors(formulario.file) }}{{ form_widget(formulario.file, {'attr': {'onchange': 'fileSelected()'}}) }} </div></td>
						<td><input id="subir" type="button" onclick="uploadFile()" value="Subir" /></td>
						<td>{{ form_row(formulario.ruta) }}{{ form_rest(formulario) }} <input id="max_file_size" type="hidden" name="MAX_FILE_SIZE" value="" /></td>
					</form>
					<td><button id='cerrar_file_upload'>Cerrar</button></td>
			</tr>
		</table>
		<div id="subiendofichero">
			<div id="fileName"></div>
			<div id="fileSize"></div>
			<div id="fileType"></div>
		</div>
		<div id="progressNumber"></div>
	</div>
	
	<div id='crear_carpeta' class='div_amagado'>
		<table class='no_class'>
			<tr>
				<form id="form2" action="{{ path('subir') }}" method="POST" {{ form_enctype(formulario_carpeta) }}>
					{{ form_errors(formulario_carpeta) }}
					<td><div>{{ form_label(formulario_carpeta.nombrefichero) }}{{ form_errors(formulario_carpeta.nombrefichero) }}{{ form_widget(formulario_carpeta.nombrefichero, {'attr': {'onkeyup': 'comprobarCarpeta(this)'}}) }}</div></td>
					<td><input type="button" onclick="crearCarpeta()" value="Crear" /></td>
					<td>{{ form_rest(formulario_carpeta) }}</td>
				</form>
				<td><button id='cerrar_crear_carpeta'>Cerrar</button></td>
			</tr>
		</table>
	</div>
	
	
	<script>
		$(document).ready(function(){
		  $("#button_subir").click(function(){
			$("#itsthetable").fadeTo("slow",0.15);
			$("#crear_carpeta").hide();
			$("#file_upload").show();
		  });
		  $("#button_carpeta").click(function(){
			$("#itsthetable").fadeTo("slow",0.15);
			$("#file_upload").hide();
			$("#crear_carpeta").show();
		  });
		  $("#cerrar_file_upload").click(function(){
			$("#crear_carpeta").hide();
			$("#file_upload").hide();
			$("#itsthetable").fadeTo("slow",1);
		  });
		  $("#cerrar_crear_carpeta").click(function(){
			$("#crear_carpeta").hide();
			$("#file_upload").hide();
			$("#itsthetable").fadeTo("slow",1);
		  });
		});
	</script>
</section>
{% endblock %}