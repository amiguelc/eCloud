{% extends '::frontend.html.twig' %}
{% block title %}Eventos {% endblock %}

{% block article %}
<section>
	<h1>{{ block('title') }}</h1>
	
	
	
	
		
	<script type="text/javascript">
		//Script para manejar el JSON -> Funcion mas tarde llamada eventosJSONtoTable en un fichero Javascript General que detecte la URL y ejecute funciones en base a ello()
  String.prototype.transformaCaracteresEspeciales = function() {
    return unescape(escape(this).
                      replace(/%0A/g, '<br/>').
                      replace(/%3C/g, '&lt;').
                      replace(/%3E/g, '&gt;'));
  }
  
 
    // Cargar JSON según URL
    switch (location.pathname){
	
	case "/eventos":
	cargarContenido('GET','api/eventos?nocache='+Math.random(), muestraEventos);
	break;
	case "/app_dev.php/eventos":
	cargarContenido('GET','api/eventos?nocache='+Math.random(), muestraEventos);
	break;
	case "/app.php/eventos":
	cargarContenido('GET','api/eventos?nocache='+Math.random(), muestraEventos);
	break;
  }
  
  function cargarContenido(metodo,url,funcion) {
  
    // Instanciar objeto XMLHttpRequest
    if(window.XMLHttpRequest) {
      peticion = new XMLHttpRequest();
    }
    else {
      peticion = new ActiveXObject("Microsoft.XMLHTTP");
    }
    
    // Preparar función de respuesta
	//if(contenedor==''){peticion.onreadystatechange = funcion;}else{peticion.onreadystatechange = funcion(contenedor);}
	peticion.onreadystatechange = funcion;
    // Realizar petición
    peticion.open(metodo, url, true);
    peticion.send(null);
  }
  
  
  // Función de respuesta
  function muestraEventos() {
    if(peticion.readyState == 4) {
	 
      if(peticion.status == 200) {
	 
		// Borrar datos anteriores
		//limpia(contenedor);
	  
        div = document.getElementById('tabla');
        		
		//JSON
		var arr = eval ("(" + peticion.responseText+ ")"); 
		
		
		// Formatear JSON en una tabla
		var tabla;
		var cab = "<tr>";
		var cuerpo = "";
		var color="";
		var idfichero="";
		for(var i=0;i<arr.length;i++){
			var obj = arr[i];
			cuerpo = cuerpo + "<tr>";
			for(var key in obj){
				//Para saltar campos
				//alert(key);
				if(key=="accion" || key=="fecha"){
				
					var attrName = key;
					var attrValue = obj[key];
					if(attrName=="accion"){

						if(attrValue.match(/^Has subido el fichero/)!=null){
							//Has subido... //Procesar accion para sacar el idfichero del fichero subido y que el elnace tenga de id el evento
							color="#B5FFB5";
							//idevento_idfichero="cargadivFichero('d_"+obj['idEvento']+"','"+obj['idFichero']+"')";
							var patt=new RegExp(obj['nombreFicheroNuevo']+"$");
							//attrValue=attrValue.replace(patt,"<a id='a_"+obj['idEvento']+"' href='descargar/"+obj['idFichero']+"' onmouseover=\" "+idevento_idfichero+"\" onmouseout=\" oculta('d_"+obj['idEvento']+"')\">"+obj['nombreFicheroNuevo']+"</a><span id='d_"+obj['idEvento']+"' class='tooltip'></span>");
							
							attrValue=attrValue.replace(patt,"<a idfile='"+obj['idFichero']+"' href='descargar/"+obj['idFichero']+"'>"+obj['nombreFicheroNuevo']+" </a>");
							
							
						}
						else if(attrValue.match(/^Has creado la carpeta/)!=null){
							//Has creado la carpeta... //Procesar accion para sacar el idfichero de la carpeta creada
							color="#B5FFB5";
						}
						else if(attrValue.match(/^Has borrado el fichero/)!=null){
							//Has borrado... //Procesar accion para sacar el idfichero del fichero borrado
							color="#FFB5B5";
							}
						else if(attrValue.match(/^Has borrado la carpeta/)!=null){
							//Has borrado... //Procesar accion para sacar el idfichero del fichero borrado
							color="#FFB5B5";
							}
						else if(attrValue.match(/^Has cambiado el nombre al fichero /)!=null){
							//Has cambiado el nombre al fichero... //Procesar accion para sacar el idfichero del fichero modificado
							color="#FFFF00";
						}
						else if(attrValue=="&iexcl;Te has registrado!"){color="#95FF95";}
						else {color="";}
						
						cuerpo = cuerpo + "<td style='background-color:"+color+";' > "+attrValue+"</td>";
						idFichero="";
					}
					else if(attrName=="fecha"){
						var date = new Date(attrValue['timestamp']*1000);
						var _mes=date.getMonth()+1; //getMonth devuelve el mes empezando por 0
						var _dia=date.getDate(); //getDate devuelve el dia del mes
						var _anyo=date.getFullYear();
						//alert(_dia+"-"+_mes+"-"+_anyo); //ejemplo para mostrarlo
						//alert(color);
						cuerpo = cuerpo + "<td style='text-align:right;background-color:"+color+";'>" + _dia+"/"+_mes+"/"+_anyo + " "+date.getHours()+":"+date.getMinutes()+"</td>";
					}
					else if(attrValue==null){cuerpo = cuerpo +"<td></td>";}
					else{cuerpo = cuerpo + "<td>" + attrValue + "</td>";
					}
					
					//if (i==0){
					//Guarda cabeceras de la tabla
					//cab = cab + "<th>" + attrName + "</th>";
					//}
				}
			}
			cuerpo = cuerpo + "</tr>";
		}
		cab="<tr><th style='width:87%;'>Acci&oacuten</th><th> </th>";
		tabla = "<table>" + cab + "</tr>" + cuerpo + "</table>";
		div.innerHTML = tabla;
		
		peticion="";
		tooltipear();
      }
    }
	
  }
  
  //Sin terminar, es la plantilla para crear tablas.
  function muestraFicheros() {
    if(peticion.readyState == 4) {
	 
      if(peticion.status == 200) {
	 
		// Borrar datos anteriores
		//limpia(contenedor);
	  
        div = document.getElementById('tabla');
        		
		//JSON
		var arr = eval ("(" + peticion.responseText+ ")"); 
		
		
		// Formatear JSON en una tabla
		var tabla;
		var cab = "<tr>";
		var cuerpo = "";
	
		for(var i=0;i<arr.length;i++){
			var obj = arr[i];
			cuerpo = cuerpo + "<tr>";
			for(var key in obj){
				//Para saltar campos
				//alert(key);
				if(key=="accion" || key=="fecha"){
				
					var attrName = key;
					var attrValue = obj[key];
					cuerpo = cuerpo + "<td>" + attrValue + "</td>";
					if (i==0){
					//Guarda cabeceras de la tabla
					cab = cab + "<th>" + attrName + "</th>";
					}
				}
			}
			cuerpo = cuerpo + "</tr>";
		}
		tabla = "<table>" + cab + "</tr>" + cuerpo + "</table>";
		div.innerHTML = tabla;
		
		
      }
    }
	
  }
  
  
  /*
    function cargadivFichero(evento1,fichero1) {
	//Mostrar div con "Recuperando informacion"
	var ballon=document.getElementById(evento1);
	ballon.innerHTML="Recuperando informacion...";
	ballon.style.display='inline';
	//ballon.style.z-index='2';
	//funcion2=muestradivFichero(evento1);
	//function(args){if(http.readyState==4){callback(http)}
	//function(args){if(http.readyState==4){callback(http)}
	cargarContenido('GET','api/fichero/'+fichero1+'?nocache='+Math.random(), function(){if(peticion.readyState==4){muestradivFichero(evento1);}});
	}
	
	*/
	/*
    function muestradivFichero(ballon) {
    if(peticion.readyState == 4) {
	 
      if(peticion.status == 200) {
	 
		// Borrar datos anteriores
		//limpia(contenedor);
		var div=document.getElementById(ballon);
        //div = ballon;
        		
		//JSON
		var arr = eval ("(" + peticion.responseText+ ")"); 
		var tabla="";
	
		for(var i=0;i<arr.length;i++){
			var obj = arr[i];

			for(var key in obj){
				var attrName = key;
				var attrValue = obj[key];
				
				tabla=tabla+"<p>"+attrValue+"</p>"
		
			}
			
		}
		
		
		div.innerHTML = tabla;
		
		
      }
    }
	
  }
  */
  
  
  
	  function oculta(id){
	  document.getElementById(id).style.display="none";
	  }
	  
	  
	  function limpia(id) {
	  document.getElementById(id).innerHTML = "";
	  }

	
	//window.setTimeout('juju()', 4000);
	
	function tooltipear(){
	
		$('a[idfile]').qtip({
			style: {
				classes: 'qtip-tipsy qtip-shadow'
			},
			content: {
				text: function(event, api) {
					$.ajax({
						url: 'api/fichero/'+$(this).attr('idfile'), // URL to the JSON file
						type: 'GET', // POST or GET
						dataType: 'json', // Tell it we're retrieving JSON
						data: {},
					})
					.then(function(data) {
						/* Process the retrieved JSON object
						 *    Retrieve a specific attribute from our parsed
						 *    JSON string and set the tooltip content.
						 */
						var content = 'Fichero '+ data[0].nombreFichero+"<br> Tama&ntilde;o: "+ data[0].filesize+" bytes";

						// Now we set the content manually (required!)
						api.set('content.text', content);
					}, function(xhr, status, error) {
						// Upon failure... set the tooltip content to the status and error value
						//api.set('content.text', status + ': ' + error);
						api.set('content.text', 'Fichero no encontrado');
					});

					return 'Cargando...' // Set some initial loading text
				}
			}
		});
		
		
		
	}

	/* Metodo 2 
	
		$('a').each(function() {
 
			//var fichero = $(this).find("input[name=link]").val();
			//var imdbLink = { "link" : link };
		
		
			$(this).qtip({
				content: {
					text: 'Loading...', // Loading text...
					ajax: {
						url: 'api/fichero/'+$(this).attr('idfile'), // URL to the JSON script
						type: 'GET', // POST or GET
						data: { }, // Data to pass along with your request
						dataType: 'json', // Tell it we're retrieving JSON
						success: function(data, status) {
							
							var content = 'Fichero '+ data[0].nombreFichero+"<br> Tama&ntilde;o: "+ data[0].filesize+" bytes";

							// Now we set the content manually (required!)
							this.set('content.text', content);
						}
					}
				}
			});
		
		})
	*/

	</script>
	
	<div class="tabla" id="tabla">
	
	</div>
	

</section>
	
{% endblock %}